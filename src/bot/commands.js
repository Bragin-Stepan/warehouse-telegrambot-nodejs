import { markupWithActions } from '../constants.js';
import { getDataFromServer } from '../api/get.js';
import { isUserAdded } from './authorization.js';

// === Hello ===
export const commandHello = ctx => {
  const user = ctx.from.first_name;
  setTimeout(() => {
    ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${user}! –≠—Ç–æ —Å–∫–ª–∞–¥ –∫–æ—Ñ–µ–π–Ω–∏ Aristocrat.`, {
      reply_markup: markupWithActions,
    });
  }, 500);
  ctx.reply(`‚òï`);
  setTimeout(() => {
    if (!isUserAdded) {
      ctx.reply('üîí –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å!', {});
    } else
      ctx.reply('–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', {
        reply_markup: markupWithActions,
      });
    {
    }
  }, 1000);
};

// === Excel ===
export const commandExcel = ctx => {
  const command = ctx.message.text.toLowerCase();
  let daysForExcel = 0;
  if (command === '/excel30') {
    daysForExcel = 30;
    ctx.reply(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ Excel —Ñ–∞–π–ª –∑–∞ 30 –¥–Ω–µ–π`);
  } else if (command === '/excel60') {
    daysForExcel = 60;
    ctx.reply(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ Excel —Ñ–∞–π–ª –∑–∞ 60 –¥–Ω–µ–π`);
  } else {
    ctx.reply(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ Excel —Ñ–∞–π–ª –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è`);
  }

  getDataFromServer(ctx, daysForExcel); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ

  setTimeout(() => {
    ctx.reply('–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', {
      reply_markup: markupWithActions,
    });
  }, 2000);
};
